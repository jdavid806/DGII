<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.3</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.medicalsoft</groupId>
	<artifactId>DGII</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>DGII</name>
	<description>Micro services for integration for DGII</description>
	<url />
	<licenses>
		<license />
	</licenses>
	<developers>
		<developer />
	</developers>
	<scm>
		<connection />
		<developerConnection />
		<tag />
		<url />
	</scm>
	<properties>
		<java.version>21</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-database-postgresql</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-docker-compose</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- JWT signing -->
		<dependency>
			<groupId>com.nimbusds</groupId>
			<artifactId>nimbus-jose-jwt</artifactId>
			<version>9.37.3</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.oracle.database.xml</groupId>
			<artifactId>xmlparserv2</artifactId>
			<version>21.8.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.14</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.5.14</version>
		</dependency>
		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency> -->
		<dependency>
			<groupId>jakarta.xml.bind</groupId>
			<artifactId>jakarta.xml.bind-api</artifactId>
			<version>3.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
			<version>3.0.2</version>
		</dependency>
		<!-- JAXB API -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.1</version>
		</dependency>

		<!-- ImplementaciÃ³n de JAXB (runtime) -->
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
			<version>2.3.5</version>
		</dependency>

		<!-- Necesario para evitar errores con Java 9+ -->
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>5.2.3</version>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
			<version>3.1.8</version>
		</dependency>


	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jvnet.jaxb2.maven2</groupId>
				<artifactId>maven-jaxb2-plugin</artifactId>
				<version>0.14.0</version>
				<executions>
					<!-- Generar modelo para e-CF47 -->
					<execution>
						<id>generate-ecf47</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<schemaDirectory>${project.basedir}/src/main/resources/xsd</schemaDirectory>
							<schemaFiles>e-CF-47.xsd</schemaFiles>
							<generateDirectory>${project.basedir}/src/main/java</generateDirectory>
							<generatePackage>com.medicalsoft.infrastructure.dgii.generated.ecf47</generatePackage>
						</configuration>
					</execution>
					<!-- Generar modelo para e-CF33 -->
					<execution>
						<id>generate-ecf33</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<schemaDirectory>${project.basedir}/src/main/resources/xsd</schemaDirectory>
							<schemaFiles>e-CF-33.xsd</schemaFiles>
							<generateDirectory>${project.basedir}/src/main/java</generateDirectory>
							<generatePackage>com.medicalsoft.infrastructure.dgii.generated.ecf33</generatePackage>
						</configuration>
					</execution>
					<!-- Generar modelo para e-CF32 -->
					<execution>
						<id>generate-ecf32</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<schemaDirectory>${project.basedir}/src/main/resources/xsd</schemaDirectory>
							<schemaFiles>e-CF-32.xsd</schemaFiles>
							<generateDirectory>${project.basedir}/src/main/java</generateDirectory>
							<generatePackage>com.medicalsoft.infrastructure.dgii.generated.ecf32</generatePackage>
						</configuration>
					</execution>
					<!-- Generar modelo para e-CF34 -->
					<execution>
						<id>generate-ecf34</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<schemaDirectory>${project.basedir}/src/main/resources/xsd</schemaDirectory>
							<schemaFiles>e-CF-34.xsd</schemaFiles>
							<generateDirectory>${project.basedir}/src/main/java</generateDirectory>
							<generatePackage>com.medicalsoft.infrastructure.dgii.generated.ecf34</generatePackage>
						</configuration>
					</execution>
					<!-- Generar modelo para e-CF41 -->
					<execution>
						<id>generate-ecf41</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<schemaDirectory>${project.basedir}/src/main/resources/xsd</schemaDirectory>
							<schemaFiles>e-CF-41.xsd</schemaFiles>
							<generateDirectory>${project.basedir}/src/main/java</generateDirectory>
							<generatePackage>com.medicalsoft.infrastructure.dgii.generated.ecf41</generatePackage>
						</configuration>
					</execution>
					<!-- Generar modelo para e-CF43 -->
					<execution>
						<id>generate-ecf43</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<schemaDirectory>${project.basedir}/src/main/resources/xsd</schemaDirectory>
							<schemaFiles>e-CF-43.xsd</schemaFiles>
							<generateDirectory>${project.basedir}/src/main/java</generateDirectory>
							<generatePackage>com.medicalsoft.infrastructure.dgii.generated.ecf43</generatePackage>
						</configuration>
					</execution>
					<!-- Generar modelo para e-CF44 -->
					<execution>
						<id>generate-ecf44</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<schemaDirectory>${project.basedir}/src/main/resources/xsd</schemaDirectory>
							<schemaFiles>e-CF-44.xsd</schemaFiles>
							<generateDirectory>${project.basedir}/src/main/java</generateDirectory>
							<generatePackage>com.medicalsoft.infrastructure.dgii.generated.ecf44</generatePackage>
						</configuration>
					</execution>
					<!-- Generar modelo para e-CF45 -->
					<execution>
						<id>generate-ecf45</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<schemaDirectory>${project.basedir}/src/main/resources/xsd</schemaDirectory>
							<schemaFiles>e-CF-45.xsd</schemaFiles>
							<generateDirectory>${project.basedir}/src/main/java</generateDirectory>
							<generatePackage>com.medicalsoft.infrastructure.dgii.generated.ecf45</generatePackage>
						</configuration>
					</execution>
					<!-- Generar modelo para e-CF46 -->
					<execution>
						<id>generate-ecf46</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<schemaDirectory>${project.basedir}/src/main/resources/xsd</schemaDirectory>
							<schemaFiles>e-CF-46.xsd</schemaFiles>
							<generateDirectory>${project.basedir}/src/main/java</generateDirectory>
							<generatePackage>com.medicalsoft.infrastructure.dgii.generated.ecf46</generatePackage>
						</configuration>
					</execution>
					
				</executions>
			</plugin>

		</plugins>
	</build>
</project>